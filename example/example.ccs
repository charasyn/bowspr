import asm65816
import ccexpand
import cc_asmcall
import Bowspr
import movscr_codes

command create(sprite, mov_addr) {
    LDA_i(sprite)
    LDX_i(short [0] mov_addr)
    STX_d(0x0e)
    LDX_i(short [1] mov_addr)
    STX_d(0x10)
    JSL(ASM_BowsprCreateEntity)
}

// This goes first in the file so CCScript will put it at the start
atm_card_asm: M_EB_Function_Wrapper({
    LDA_i(0x0001)
    JSL(ASM_BowsprBegin)

    create(1, test_ness)
    create(2, test_paula)
    create(3, test_jeff)
    create(4, test_poo)
    create(1, test_5)
    create(2, test_6)
    create(3, test_7)
    create(4, test_8)
    BText(MiddleText)

    JSL(ASM_BowsprEnd)
})
MiddleText:
    newline
    "@This is a lot of text being printed while stuff is moving."
    pause(68)
    "[1f 61]"
    newline
    "@Done!|||||"
    eob

define WAIT_FRAMES = 1
test_ness: {
    setxpos(260)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_var(7,0)
    mov_reg_var(7)
    asmcall(asm_write_letterbox_regs)
    mov_reg_imm(2)
    asmcall(0xc429e8)
    startloop(34)
        var_add(7,2)
        mov_reg_var(7)
        asmcall(asm_write_letterbox_regs)
        mov_wait(1)
    endloop
    unlock_text_script
    mov_wait(1)
    mov_mem16(0x9641,0)
    mov_jsl(common)
    ondraw(0x9ff0) // NOP - Don't draw us now
    mov_var(7,68)
    startloop(34)
        var_add(7,-2)
        mov_reg_var(7)
        asmcall(asm_write_letterbox_regs)
        mov_wait(1)
    endloop
    mem8_and(0x001f,0xFD)
    unlock_text_script
    mov_end
}
asm_write_letterbox_regs: {
    INC
    STA_a(0xadb2)
    DEC
    PHA
    LDA_i(224)
    SEC
    SBC_s(1)
    STA_a(0xadb4)
    JSL(0xc2d0ac)
    PLA
    RTL
}
test_paula: {
    setxpos(280)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_jeff: {
    setxpos(300)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_poo: {
    setxpos(320)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_5: {
    setxpos(340)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_6: {
    setxpos(360)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_7: {
    setxpos(380)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}
test_8: {
    setxpos(400)
    setypos(88)
    ondraw(0x9ff0) // NOP - Don't draw us yet
    mov_jsl(wait_for_unlock)
    mov_jsl(common)
    mov_end
}

wait_for_unlock: {
    mov_wait(1)
    mov_reg_mem(0x9641)
    jeq(wait_for_unlock)
    mov_wait(1)
    mov_rtl
}

common: {
    ontick_nop
    priority(0)
    onmove(0xC09FC8) // Apply XY velocity
    onposition(0xC0A0BB) // Position relative to screen
    ondraw(0xC0A3A4) // Usual draw code
    mov_var(0, 1)
    startloop(12)
        mov_jsl(go_in_circle)
    endloop
    setxvel(0)
    setyvel(0)
    movasm_destroy_thisobj
    mov_rtl
}
go_in_circle: {
setxvel(713) setyvel(0) movasm_set_facing_anim(2,0) mov_wait(WAIT_FRAMES)
setxvel(701) setyvel(133) movasm_set_facing_anim(2,0) mov_wait(WAIT_FRAMES)
setxvel(666) setyvel(262) movasm_set_facing_anim(2,1) mov_wait(WAIT_FRAMES)
setxvel(608) setyvel(385) movasm_set_facing_anim(3,1) mov_wait(WAIT_FRAMES)
setxvel(528) setyvel(498) movasm_set_facing_anim(3,0) mov_wait(WAIT_FRAMES)
setxvel(429) setyvel(600) movasm_set_facing_anim(3,0) mov_wait(WAIT_FRAMES)
setxvel(314) setyvel(686) movasm_set_facing_anim(3,1) mov_wait(WAIT_FRAMES)
setxvel(184) setyvel(756) movasm_set_facing_anim(3,1) mov_wait(WAIT_FRAMES)
setxvel(43) setyvel(806) movasm_set_facing_anim(4,0) mov_wait(WAIT_FRAMES)
setxvel(-104) setyvel(838) movasm_set_facing_anim(4,0) mov_wait(WAIT_FRAMES)
setxvel(-256) setyvel(848) movasm_set_facing_anim(4,1) mov_wait(WAIT_FRAMES)
setxvel(-407) setyvel(838) movasm_set_facing_anim(4,1) mov_wait(WAIT_FRAMES)
setxvel(-554) setyvel(806) movasm_set_facing_anim(4,0) mov_wait(WAIT_FRAMES)
setxvel(-695) setyvel(756) movasm_set_facing_anim(5,0) mov_wait(WAIT_FRAMES)
setxvel(-825) setyvel(686) movasm_set_facing_anim(5,1) mov_wait(WAIT_FRAMES)
setxvel(-940) setyvel(600) movasm_set_facing_anim(5,1) mov_wait(WAIT_FRAMES)
setxvel(-1039) setyvel(498) movasm_set_facing_anim(5,0) mov_wait(WAIT_FRAMES)
setxvel(-1119) setyvel(385) movasm_set_facing_anim(5,0) mov_wait(WAIT_FRAMES)
setxvel(-1177) setyvel(262) movasm_set_facing_anim(6,1) mov_wait(WAIT_FRAMES)
setxvel(-1212) setyvel(133) movasm_set_facing_anim(6,1) mov_wait(WAIT_FRAMES)
setxvel(-1224) setyvel(0) movasm_set_facing_anim(6,0) mov_wait(WAIT_FRAMES)
setxvel(-1212) setyvel(-132) movasm_set_facing_anim(6,0) mov_wait(WAIT_FRAMES)
setxvel(-1177) setyvel(-261) movasm_set_facing_anim(6,1) mov_wait(WAIT_FRAMES)
setxvel(-1119) setyvel(-384) movasm_set_facing_anim(7,1) mov_wait(WAIT_FRAMES)
setxvel(-1039) setyvel(-497) movasm_set_facing_anim(7,0) mov_wait(WAIT_FRAMES)
setxvel(-940) setyvel(-599) movasm_set_facing_anim(7,0) mov_wait(WAIT_FRAMES)
setxvel(-825) setyvel(-685) movasm_set_facing_anim(7,1) mov_wait(WAIT_FRAMES)
setxvel(-695) setyvel(-755) movasm_set_facing_anim(7,1) mov_wait(WAIT_FRAMES)
setxvel(-554) setyvel(-805) movasm_set_facing_anim(0,0) mov_wait(WAIT_FRAMES)
setxvel(-407) setyvel(-837) movasm_set_facing_anim(0,0) mov_wait(WAIT_FRAMES)
setxvel(-256) setyvel(-847) movasm_set_facing_anim(0,1) mov_wait(WAIT_FRAMES)
setxvel(-104) setyvel(-837) movasm_set_facing_anim(0,1) mov_wait(WAIT_FRAMES)
setxvel(43) setyvel(-805) movasm_set_facing_anim(0,0) mov_wait(WAIT_FRAMES)
setxvel(184) setyvel(-755) movasm_set_facing_anim(1,0) mov_wait(WAIT_FRAMES)
setxvel(314) setyvel(-685) movasm_set_facing_anim(1,1) mov_wait(WAIT_FRAMES)
setxvel(429) setyvel(-599) movasm_set_facing_anim(1,1) mov_wait(WAIT_FRAMES)
setxvel(528) setyvel(-497) movasm_set_facing_anim(1,0) mov_wait(WAIT_FRAMES)
setxvel(608) setyvel(-384) movasm_set_facing_anim(1,0) mov_wait(WAIT_FRAMES)
setxvel(666) setyvel(-261) movasm_set_facing_anim(2,1) mov_wait(WAIT_FRAMES)
setxvel(701) setyvel(-132) movasm_set_facing_anim(2,1) mov_wait(WAIT_FRAMES)
    mov_rtl
}

// ================================================================================================

// Make Tracy say our custom text.
ROM[0xc66aa4] = { goto(test_text) }
test_text: {
    "@Geegoo time?" newline
    "[19 02]Yes[02][19 02]No[02][1C 07 02][11]{clearline}[09 02 {long giygas_time} {long no_giygas_time}]"
no_giygas_time:
    "@Ok/ maybe later.| Cya" next
    eob
giygas_time:
    // Start battle with enemy group 478?
    window_close(1)
    cc_asmcall(setup_giygas, RET_NONE)
    "[1f 23 {short 478}]"
    window_open(1)
    "@Ok cool. Good job bro." next
    eob
}
setup_giygas: {
    LDA_i(0x0004)
    STA_a(0xA97A)
    RTL
}
// Overwrite ATM card battle routine with our code
ROM[0xD584A8] = long atm_card_text
ROM[0xD584AC] = long atm_card_asm
ROM[0xD56B10] = byte 0x35
atm_card_text: {
    newline
    "@{user}[19 1F]{swap} used the" linebreak
    "  secret debug device![03]" eob
}

////////////////////////////////////////////////////////////////////////////////
////// Setup CCScript stuff: "newgame" commands, hijacks and pointer overwrites

//// "Normal" CCScript commands
// Set Ness' initial position
newgame_location(7720, 360)
// Set the "Startup" text. This normally handles the whole
// Onett night-time flyover sequence.
newgame_startup(newgame_text_in_map)

//// New ASM patch that runs when a new game is created, but
//// before the map is loaded.
ROM[0xc1feb2] = {
    // We just call the new text block.
    MText(newgame_text_before_map)
    BRA(0) // 2-byte no-op
    // This skips the following:
    // - Set flag 11
    // - Disable NPCs
    // So if you want those things, make sure to do them yourselves!
    // Specifically, if you want to disable/enable NPCs, try this:
    // https://github.com/pk-hack/CoilSnake/wiki/CCScript-Library#enabledisable-all-npcs-by-cooprocks123e
}

//// Change a text pointer that is always called after loading a
//// save file but before loading the map.
_asmptr(0xC1FF1C, always_text_before_map)

////////////////////////////////////////////////////////////////////////////////
////// Actual text
newgame_text_before_map:
    // This is where you should set all your flags, especially if
    // you are adjusting some that affect the map.
    call(newgame_set_flags_to_post_meteor)
    // Add Paula
    "[1f 11 02]"
    // Set levels to 80
    "[1e 08 01 50]"
    "[1e 08 02 50]"
    eob

always_text_before_map:
    // Unset flag indicating that you just slept in a hotel.
    // If this is set, it will play the Good Morning music,
    // and you won't be able to sleep in the hotel again (without leaving).
    unset(flag 383)
    eob

newgame_text_in_map:
    // You probably want to save here!
    // This is the equivalent
    save
    eob

newgame_set_flags_to_post_meteor:
    unset(flag 11)  // Disable "peaceful mode"
    set(flag 20)    // Picky joined your party. Never unset
    set(flag 34)    // Post Starman Jr / Picky left party. Never unset
    set(flag 94)    // Seems to fix your mom
    unset(flag 95)  // Makes phones work (might already be unset)
    set(flag 98)    // Makes Ness's phone specifically work
    set(flag 100)   // King doesn't want to go outside
    set(flag 104)   // Pokey/Picky punished, first day events cleaned up
    unset(flag 107) // When on, primes sunrise transition exiting Pokey's house
    set(flag 199)   // Know how to call Ness's dad
    set(flag 200)   // Know how to call Ness's mom
    set(flag 209)   // Onett warp - necessary to have correct Mom text
    set(flag 375)   // Most Onett townsfolk
    set(flag 422)   // Onett daytime palette
    set(flag 469)   // Suppresses the day 1 townsfolk
    unset(flag 476) // Onett roadblocks
    unset(flag 477) // Ness head in his room
    set(flag 517)   // Ness's house's lights are on
    unset(flag 532) // No meteor sound in Ness' house
    unset(flag 533) // No meteor sound in Ness' room
    unset(flag 749) // No pajamas?
    eob
